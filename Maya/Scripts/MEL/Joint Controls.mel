
// vector $axis = <<0, 1, 0>>;
// print($axis);

global proc JointCtrlGenerator(vector $tempAxis)
{
    string $joint[] = `ls -sl`;
    string $ctrlName, $grpName;
    float $radius = 1;
    // print($tempAxis);

    for ($i=0; $i<size($joint); $i++)
    {
        // print($joint[$i]+"\n");
        $ctrlName = $joint[$i] + "_ctrl";
        circle -n $ctrlName -c 0 0 0 -nr $tempAxis -sw 360 -r $radius -d 3 -ut 0 -tol 0.01 -s 8 -ch 1; objectMoveCommand;
        $grpName = $ctrlName + "_grp";
        group -name $grpName;
        select -r $grpName $joint[$i];
        matchTransform;
        //parent and scale constrain joint to control
        select -r $ctrlName $joint[$i];
        parentConstraint -mo -weight 1;
        scaleConstraint -offset 1 1 1 -weight 1;
    }
}
//create a curve or a series of shapes to get the code for creating those controls
//add an argument to control generator (a string, which asks for circle, triangle, or any other shape), use an else if statement to 
//parse those arguments and create the right shape
//in python, convert the curve code to cmds.curve(d=__,p=[__],k=[__]) where __ is the list of arguments

global proc JointButton()
{
    string $axisOption = `optionVar -q "axis"`;
    string $textField = `optionVar -q "textField"`;
    
    int $axis = `radioButtonGrp -q -select $axisOption`;

    if ($axis == 1)
    {
        JointCtrlGenerator({1,0,0});
    }
    else if ($axis == 2)
    {
        JointCtrlGenerator({0,1,0});
    }
    else if ($axis == 3)
    {
        JointCtrlGenerator({0,0,1});
    }
}

global proc JointUI()
{
    string $window = "mainWindow";
    if(`window -ex $window`)
    {
        deleteUI $window;
    }

    $window = `window -t "Joint Control Generator" -wh 300 300 -resizeToFitChildren 1 $window`;
    string $column = `columnLayout -adj 1`;
    
    optionVar -sv "axis" `radioButtonGrp -numberOfRadioButtons 3 -labelArray3 "X" "Y" "Z"`;
    button -label "Generate Controls" -command JointButton;
    
    showWindow $window;
}

JointUI();